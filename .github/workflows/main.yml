# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: 7.4
          extensions: mbstring, dom, fileinfo, zip, exif, pcntl
      #        coverage: xdebug #optional

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Copy ENV Laravel Configuration for CI
        run: php -r "file_exists('.env') || copy('.env.ci', '.env');"

      - name: Install Dependencies (PHP vendors)
        run: composer install  --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Create DB and schemas
        run: php artisan migrate

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit